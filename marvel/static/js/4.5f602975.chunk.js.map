{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","margin","height","objectFit","src","img","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","console","log","textObjects","title","pageCount","language","price","prices","View","imgStyle","className","alt","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","hasError","errorInfo","this","setState","children","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/4.5f602975.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\"\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: \"block\", width: \"250px\", margin: \"0 auto\", height: \"250px\", objectFit: \"contain\"}} src={img}></img>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nexport const useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n    \r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=5b19420ac0c763f8ec0ad9978f859a6c';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async(id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComic = async(id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'Description not available',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        console.log(comics);\r\n    \r\n        const description = comics.description \r\n            ? comics.description \r\n            : comics.textObjects?.[0]?.description || 'There is no description';\r\n    \r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: description,\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail?.path && comics.thumbnail?.extension \r\n                ? `${comics.thumbnail.path}.${comics.thumbnail.extension}` \r\n                : 'Image not available',\r\n            language: comics.textObjects?.[0]?.language || 'en-us',\r\n            price: comics.prices?.[0]?.price \r\n                ? `${comics.prices[0].price}$` \r\n                : 'not available'\r\n        };\r\n    }\r\n    \r\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {\"Content-Type\": \"application/json\"}) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError};\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\n\r\nconst RandomChar = () => {\r\n\r\n    const [char, setChar] = useState(null);\r\n    const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        const timerId = setInterval(updateChar, 60000);\r\n        return () => {\r\n            clearInterval(timerId);\r\n        }\r\n    }, [])\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        getCharacter(id)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">Random character for today</p>\r\n                <p className=\"randomchar__title\">Do you want to get to know him better?</p>\r\n                <p className=\"randomchar__title\">Or choose another one</p>\r\n                <button className=\"button button__main\" onClick={updateChar}>\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki} = char;\r\n\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'unset'};\r\n    }\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">{description}</p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Spinner from \"../spinner/spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport \"./charList.scss\";\r\n\r\nconst CharList = (props) => {\r\n\r\n    const [charList, setCharList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n\r\n    const {loading, error, getAllCharacters} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllCharacters(offset)\r\n            .then(onCharListLoaded)\r\n    }\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n        setCharList(charList => [...charList, ...newCharList]);\r\n        setNewItemLoading(newItemLoading => false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEnded(charEnded => ended)\r\n    }\r\n\r\n\r\n\r\n    const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs.current[id].classList.add('char__item_selected');\r\n        itemRefs.current[id].focus()\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items = arr.map((item, i) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n\r\n            return (\r\n                <li\r\n                    className=\"char__item\"\r\n                    tabIndex={0}\r\n                    ref={el => itemRefs.current[i] = el}\r\n                    key={item.id}\r\n                    onClick={() => {\r\n                        props.onCharSelected(item.id);\r\n                        focusOnItem(i);\r\n                    }}\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === ' ' || e.key === \"Enter\") {\r\n                            props.onCharSelected(item.id);\r\n                            focusOnItem(i);\r\n                        }\r\n                    }}>\r\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                    <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(charList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button\r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{'display' : charEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func\r\n}\r\n\r\nexport default CharList;\r\n","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\n\r\nimport './charInfo.scss';\r\n\r\nconst CharInfo = (props) => {\r\n\r\n    const [char, setChar] = useState(null);\r\n\r\n    const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar()\r\n    }, [props.charId])\r\n\r\n    const updateChar = () => {\r\n        const {charId} = props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n\r\n        clearError();\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton/>;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0 ? null : 'There is no comics with this character'}\r\n                {\r\n                    comics.map((item, i) => {\r\n                        // eslint-disable-next-line\r\n                        if (i > 9) return;\r\n                        return (\r\n                            <li key={i} className=\"char__comics-item\">\r\n                                {item.name}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }                \r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {useState} from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage"],"sourceRoot":""}