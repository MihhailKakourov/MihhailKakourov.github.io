{"version":3,"sources":["components/pages/SingleComicPage.js"],"names":["View","comic","title","description","thumbnail","pageCount","language","price","className","src","alt","to","SingleComicPage","comicId","useParams","useState","setComic","useMarvelService","loading","error","getComic","clearError","useEffect","updateComic","then","onComicLoaded","errorMessage","spinner","content"],"mappings":"gLA2CMA,EAAO,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACJC,EAA6DD,EAA7DC,MAAOC,EAAsDF,EAAtDE,YAAaC,EAAyCH,EAAzCG,UAAWC,EAA8BJ,EAA9BI,UAAWC,EAAmBL,EAAnBK,SAAUC,EAASN,EAATM,MAE3D,OACI,sBAAKC,UAAU,eAAf,UACI,qBAAKC,IAAKL,EAAWM,IAAKR,EAAOM,UAAU,sBAC3C,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,qBAAd,SAAoCN,IACpC,mBAAGM,UAAU,sBAAb,SAAoCL,IACpC,mBAAGK,UAAU,sBAAb,SAAoCH,IACpC,oBAAGG,UAAU,sBAAb,uBAA8CF,KAC9C,qBAAKE,UAAU,sBAAf,SAAsCD,OAE1C,cAAC,IAAD,CAAMI,GAAG,UAAUH,UAAU,qBAA7B,6BAKGI,UArDS,WAEpB,IAAOC,EAAWC,cAAXD,QACP,EAA0BE,mBAAS,MAAnC,mBAAOd,EAAP,KAAce,EAAd,KACA,EAA+CC,cAAxCC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,WAEjCC,qBAAU,WACNC,MACD,CAACV,IAEJ,IAAMU,EAAc,WAChBF,IACAD,EAASP,GACJW,KAAKC,IAGRA,EAAgB,SAACxB,GACnBe,EAASf,IAGPyB,EAAeP,EAAQ,cAAC,IAAD,IAAkB,KACzCQ,EAAUT,EAAU,cAAC,IAAD,IAAa,KACjCU,EAAYV,GAAWC,IAAUlB,EAAiC,KAAxB,cAACD,EAAD,CAAMC,MAAOA,IAE7D,OACI,qCACI,cAAC,IAAD,IACCyB,EACAC,EACAC","file":"static/js/8.e14ed816.chunk.js","sourcesContent":["import {useParams, Link} from \"react-router-dom\";\r\nimport {useState, useEffect} from \"react\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst SingleComicPage = () => {\r\n\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic();\r\n    }, [comicId])\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    const {title, description, thumbnail, pageCount, language, price} = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage"],"sourceRoot":""}